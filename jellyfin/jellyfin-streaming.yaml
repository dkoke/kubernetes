apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app: jellyfin
    deployment.kubernetes.io/revision: "6"
    field.cattle.io/publicEndpoints: '[{"addresses":["10.0.100.232"],"port":8096,"protocol":"TCP","serviceName":"jellyfin:jellyfin-streaming-loadbalancer","allNodes":false}]'
  creationTimestamp: "2022-11-13T17:52:10Z"
  generation: 24
  labels:
    workload.user.cattle.io/workloadselector: apps.deployment-jellyfin-jellyfin-streaming
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:app: {}
          f:field.cattle.io/publicEndpoints: {}
        f:labels:
          .: {}
          f:workload.user.cattle.io/workloadselector: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:type: {}
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:cattle.io/timestamp: {}
            f:labels:
              .: {}
              f:workload.user.cattle.io/workloadselector: {}
          f:spec:
            f:affinity: {}
            f:containers:
              k:{"name":"container-0"}:
                .: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8096,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/cache"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/config"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/data/movies"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/data/tvshows"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"container-1"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"PGID"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"PUID"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"TZ"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8989,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/config"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/downloads/complete"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/tvshows"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"container-2"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"PGID"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"PUID"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"TZ"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":7878,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/config"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/downloads/complete"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/movies"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"container-3"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"PGID"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"PUID"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"TZ"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":6969,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/config"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/movies"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/tvshows"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"container-4"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"LOG_LEVEL"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"TZ"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":5055,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/app/config"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsConfig: {}
            f:dnsPolicy: {}
            f:nodeName: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"bazarr-config"}:
                .: {}
                f:name: {}
                f:nfs:
                  .: {}
                  f:path: {}
                  f:server: {}
              k:{"name":"cache"}:
                .: {}
                f:name: {}
                f:nfs:
                  .: {}
                  f:path: {}
                  f:server: {}
              k:{"name":"config"}:
                .: {}
                f:name: {}
                f:nfs:
                  .: {}
                  f:path: {}
                  f:server: {}
              k:{"name":"jellyseerr-config"}:
                .: {}
                f:name: {}
                f:nfs:
                  .: {}
                  f:path: {}
                  f:server: {}
              k:{"name":"media-movies"}:
                .: {}
                f:name: {}
                f:nfs:
                  .: {}
                  f:path: {}
                  f:server: {}
              k:{"name":"media-tvshows"}:
                .: {}
                f:name: {}
                f:nfs:
                  .: {}
                  f:path: {}
                  f:server: {}
              k:{"name":"radarr-config"}:
                .: {}
                f:name: {}
                f:nfs:
                  .: {}
                  f:path: {}
                  f:server: {}
              k:{"name":"sonarr-config"}:
                .: {}
                f:name: {}
                f:nfs:
                  .: {}
                  f:path: {}
                  f:server: {}
              k:{"name":"transmission-downloads"}:
                .: {}
                f:name: {}
                f:nfs:
                  .: {}
                  f:path: {}
                  f:server: {}
    manager: agent
    operation: Update
    time: "2022-11-13T19:40:11Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:replicas: {}
        f:unavailableReplicas: {}
        f:updatedReplicas: {}
    manager: k3s
    operation: Update
    subresource: status
    time: "2022-11-13T19:41:26Z"
  name: jellyfin-streaming
  namespace: jellyfin
  resourceVersion: "1541000"
  uid: c657dfd7-5a53-4b83-a368-12e5bf26b3c4
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-jellyfin-jellyfin-streaming
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2022-11-13T19:38:35Z"
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: apps.deployment-jellyfin-jellyfin-streaming
    spec:
      affinity: {}
      containers:
      - image: jellyfin/jellyfin
        imagePullPolicy: Always
        name: container-0
        ports:
        - containerPort: 8096
          name: jellyfin
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /cache
          name: cache
        - mountPath: /data/movies
          name: media-movies
        - mountPath: /data/tvshows
          name: media-tvshows
      - env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: America/Chicago
        image: linuxserver/sonarr
        imagePullPolicy: Always
        name: container-1
        ports:
        - containerPort: 8989
          name: sonarr
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tvshows
          name: media-tvshows
        - mountPath: /downloads/complete
          name: transmission-downloads
        - mountPath: /config
          name: sonarr-config
      - env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: America/Chicago
        image: linuxserver/radarr
        imagePullPolicy: Always
        name: container-2
        ports:
        - containerPort: 7878
          name: radarr
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: radarr-config
        - mountPath: /downloads/complete
          name: transmission-downloads
        - mountPath: /movies
          name: media-movies
      - env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: America/Chicago
        image: linuxserver/bazarr
        imagePullPolicy: Always
        name: container-3
        ports:
        - containerPort: 6969
          name: bazarr
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /movies
          name: media-movies
        - mountPath: /tvshows
          name: media-tvshows
        - mountPath: /config
          name: bazarr-config
      - env:
        - name: LOG_LEVEL
          value: debug
        - name: TZ
          value: America/Chicago
        image: fallenbagel/jellyseerr:develop
        imagePullPolicy: Always
        name: container-4
        ports:
        - containerPort: 5055
          name: jellyseerr
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/config
          name: jellyseerr-config
      dnsConfig: {}
      dnsPolicy: ClusterFirstWithHostNet
      nodeName: k3s-worker2
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        nfs:
          path: /nfs/jellyfin/config
          server: 10.0.100.148
      - name: cache
        nfs:
          path: /nfs/jellyfin/cache
          server: 10.0.100.148
      - name: media-movies
        nfs:
          path: /nfs/media/movies
          server: 10.0.100.148
      - name: media-tvshows
        nfs:
          path: /nfs/media/tvshows
          server: 10.0.100.148
      - name: transmission-downloads
        nfs:
          path: /nfs/transmission/downloads/complete
          server: 10.0.100.148
      - name: sonarr-config
        nfs:
          path: /nfs/sonarr
          server: 10.0.100.148
      - name: radarr-config
        nfs:
          path: /nfs/radarr
          server: 10.0.100.148
      - name: bazarr-config
        nfs:
          path: /nfs/bazarr
          server: 10.0.100.148
      - name: jellyseerr-config
        nfs:
          path: /nfs/jellyseerr
          server: 10.0.100.148
status:
  conditions:
  - lastTransitionTime: "2022-11-13T19:38:36Z"
    lastUpdateTime: "2022-11-13T19:38:36Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2022-11-13T19:38:32Z"
    lastUpdateTime: "2022-11-13T19:41:26Z"
    message: ReplicaSet "jellyfin-streaming-84fd7f9c97" is progressing.
    reason: ReplicaSetUpdated
    status: "True"
    type: Progressing
  observedGeneration: 24
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
